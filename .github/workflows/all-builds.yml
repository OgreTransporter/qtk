name: All Builds

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  Build-Qtk:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            cmake: -DCMAKE_PREFIX_PATH="/home/runner/work/qtk/Qt/6.5.0/gcc_64/"
          - os: windows-latest
            cmake: -DCMAKE_PREFIX_PATH="D:/a/qtk/qtk/Qt/6.5.0/mingw81_64/"
          - os: macos-latest
            cmake: -DCMAKE_PREFIX_PATH="/home/runner/work/qtk/Qt/6.5.0/gcc_64/"

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: '6.5.0'

      - name: Chocolatey Action
        if: matrix.os == 'windows-latest'
        uses: crazy-max/ghaction-chocolatey@v2
        with:
          args: install pkgconfiglite --checksum e87b5ea3c9142256af60f2d5b917aa63b571e6a0 --checksum-type sha1

      - name: Build Qtk
        if: matrix.os == 'windows-latest'
        shell: bash
        run: |
          cmake -B build/ ${{ matrix.cmake }} -DQTK_UPDATE_SUBMODULES=ON -DQTK_DEBUG=OFF
          cmake --build build/ --config Release

      - name: Build Qtk
        if: matrix.os != 'windows-latest'
        shell: bash
        run: |
          cmake -B build/ ${{ matrix.cmake }} -DQTK_UPDATE_SUBMODULES=ON -DQTK_DEBUG=OFF
          cmake --build build/ --config Release -- -j $(nproc)

      - name: Install Qtk
        shell: bash
        run: |
          cmake --install build/ --config Release

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: qtk-${{ matrix.os }}-install
          path: install/*

      - name: Package Qtk
        if: matrix.os == 'windows-latest'
        shell: bash
        run: |
          cd build/
          cmake --build . --target package --config Release

      - name: Package Qtk
        if: matrix.os != 'windows-latest'
        shell: bash
        run: |
          cd build/
          cmake --build . --target package --config Release -- -j $(nproc)

#      - name: Package Qtk Sources
#        if: matrix.os != 'macos-latest'
#        shell: bash
#        run: |
#          cmake --build build/ --target package_source

      - uses: actions/upload-artifact@v3
        if: ${{ failure() && matrix.os == 'windows-latest' }}
        with:
          name: qtk-packages-${{ matrix.os }}
          path: |
            build/_CPack_Packages/win64/NSIS/NSISOutput.log

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: qtk-packages-${{ matrix.os }}
          path: |
            build/packages/
            !build/packages/_cpack_packages/*

  Build-Qtk-Assimp-Targets:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            cmake: -DCMAKE_PREFIX_PATH="/home/runner/work/qtk/Qt/6.5.0/gcc_64/"
          - os: macos-latest
            cmake: -DCMAKE_PREFIX_PATH="/home/runner/work/qtk/Qt/6.5.0/gcc_64/" -DASSIMP_NEW_INTERFACE=ON

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: '6.5.0'

      - name: Install Assimp MacOS
        if: matrix.os == 'macos-latest'
        shell: bash
        run: |
          brew install assimp

      - name: Install Assimp Ubuntu
        if: matrix.os == 'ubuntu-latest'
        shell: bash
        run: |
          sudo apt install libassimp-dev

      - name: Build Qtk
        if: matrix.os == 'windows-latest'
        shell: bash
        run: |
          cmake -B build/ ${{ matrix.cmake }} -DQTK_DEBUG=OFF
          cmake --build build/ --config Release

      - name: Build Qtk
        if: matrix.os != 'windows-latest'
        shell: bash
        run: |
          cmake -B build/ ${{ matrix.cmake }} -DQTK_DEBUG=OFF
          cmake --build build/ --config Release -- -j $(nproc)

  # TODO: Enable with tag only when done testing
#  Release-Qtk:
#    needs: Build-Qtk
#    strategy:
#      fail-fast: false
#      matrix:
#        os: [ubuntu-latest, windows-latest, macos-latest]
